from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from fastapi import Query
from typing import Optional

app = FastAPI()

class Item(BaseModel):
    text: str
    is_done: bool = False

items = []

## GET
@app.get("/")
def root():
    return {"Hello" : "World"}

@app.get("/items", response_model=list[Item])
def list_items(limit: Optional[int] = Query(None, ge=1)):
    return items if limit is None 
    else items[:limit]

@app.get("/items/{item_id}", response_model=Item)
def get_item(item_id: int) -> Item:
    if item_id < len(items):
        return items[item_id]
    else:
        raise HTTPException(status_code=404, detail=f"Item {item_id} not found")
    return items[item_id]


## POST
@app.post("/items/create")
def create_item(item: Item):
    items.append(item)
    return items